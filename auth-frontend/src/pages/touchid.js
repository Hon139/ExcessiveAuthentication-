import React, { useState } from 'react';
import logo from '../components/YorkU_logo.png';
import './pages.css';

function TouchID() {
  const [authStatus, setAuthStatus] = useState('');
  const [error, setError] = useState('');

  // Function to initiate Touch ID authentication
  const handleTouchID = async () => {
    try {
      // Create a public key credential creation options object
      const publicKeyCredentialCreationOptions = {
        challenge: new Uint8Array(32), // Normally generated by the server
        rp: { name: "Gatekeeper" },
        user: {
          id: new Uint8Array(16),
          name: "tuczynskis@gmail.com",
          displayName: "Stefan Tuczynski"
        },
        pubKeyCredParams: [{ alg: -7, type: "public-key" }], // -7 refers to "ES256" algorithm
        authenticatorSelection: { authenticatorAttachment: "platform" },
        timeout: 60000,
        attestation: "none"
      };

      // Request a credential from the user via WebAuthn API
      const credential = await navigator.credentials.create({
        publicKey: publicKeyCredentialCreationOptions
      });

      if (credential) {
        setAuthStatus('Authentication successful!');
      } else {
        setAuthStatus('Authentication failed.');
      }
    } catch (err) {
      setError('Touch ID authentication failed. Please try again.');
      console.error(err);
    }
  };

  return (
    <div className="MathAuth">
      <header className="Banner_Logo">
        <img src={logo} className="org-logo" alt="York University Logo" />
      </header>

      <div className="header-banner">
        <h1 className="passport-text">Passport York Login</h1>
      </div>

      <div className="math-container">
        <h2>Touch ID Authentication</h2>
        <button onClick={handleTouchID} className="auth-button">
          Authenticate with Touch ID
        </button>
        {authStatus && <p className="auth-status">{authStatus}</p>}
        {error && <p className="error">{error}</p>}
      </div>
    </div>
  );
}

export default TouchID;
